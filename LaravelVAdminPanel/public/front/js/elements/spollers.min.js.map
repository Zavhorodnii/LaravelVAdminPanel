{"version":3,"sources":["elements/spollers.js"],"names":["spollersArray","document","querySelectorAll","length","spollersRegular","Array","from","filter","item","index","self","dataset","spollers","split","initSpollers","spollersMedia","breakpointsArray","forEach","breakpoint","paramsArray","value","type","trim","push","mediaQueries","map","indexOf","mediaBreakpoint","mediaType","matchMedia","window","addListener","spollersBlock","matches","classList","add","initSpollerBody","addEventListener","setSpollerAction","remove","removeEventListener","hideSpollerBody","spollerTitles","spollerTitle","removeAttribute","contains","nextElementSibling","hidden","setAttribute","e","el","target","hasAttribute","closest","oneSpoller","hideSpollersBody","toggle","_slideToggle","preventDefault","spollerActiveTitle","querySelector","_slideUp","duration","style","transitionProperty","transitionDuration","height","offsetHeight","overflow","paddingTop","paddingBottom","marginTop","marginBottom","setTimeout","removeProperty","_slideDown"],"mappings":"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","file":"spollers.min.js","sourcesContent":["\"use strict\"\r\n\r\n// SPOLLERS\r\nconst spollersArray = document.querySelectorAll('[data-spollers]');\r\nif (spollersArray.length > 0) {\r\n  // Получение обычных слойлеров\r\n  const spollersRegular = Array.from(spollersArray).filter(function (item, index, self) {\r\n    return !item.dataset.spollers.split(\",\")[0];\r\n  });\r\n  // Инициализация обычных слойлеров\r\n  if (spollersRegular.length > 0) {\r\n    initSpollers(spollersRegular);\r\n  }\r\n\r\n  // Получение слойлеров с медиа запросами\r\n  const spollersMedia = Array.from(spollersArray).filter(function (item, index, self) {\r\n    return item.dataset.spollers.split(\",\")[0];\r\n  });\r\n\r\n  // Инициализация слойлеров с медиа запросами\r\n  if (spollersMedia.length > 0) {\r\n    const breakpointsArray = [];\r\n    spollersMedia.forEach(item => {\r\n      const params = item.dataset.spollers;\r\n      const breakpoint = {};\r\n      const paramsArray = params.split(\",\");\r\n      breakpoint.value = paramsArray[0];\r\n      breakpoint.type = paramsArray[1] ? paramsArray[1].trim() : \"max\";\r\n      breakpoint.item = item;\r\n      breakpointsArray.push(breakpoint);\r\n    });\r\n\r\n    // Получаем уникальные брейкпоинты\r\n    let mediaQueries = breakpointsArray.map(function (item) {\r\n      return '(' + item.type + \"-width: \" + item.value + \"px),\" + item.value + ',' + item.type;\r\n    });\r\n    mediaQueries = mediaQueries.filter(function (item, index, self) {\r\n      return self.indexOf(item) === index;\r\n    });\r\n\r\n    // Работаем с каждым брейкпоинтом\r\n    mediaQueries.forEach(breakpoint => {\r\n      const paramsArray = breakpoint.split(\",\");\r\n      const mediaBreakpoint = paramsArray[1];\r\n      const mediaType = paramsArray[2];\r\n      const matchMedia = window.matchMedia(paramsArray[0]);\r\n\r\n      // Объекты с нужными условиями\r\n      const spollersArray = breakpointsArray.filter(function (item) {\r\n        if (item.value === mediaBreakpoint && item.type === mediaType) {\r\n          return true;\r\n        }\r\n      });\r\n      // Событие\r\n      matchMedia.addListener(function () {\r\n        initSpollers(spollersArray, matchMedia);\r\n      });\r\n      initSpollers(spollersArray, matchMedia);\r\n    });\r\n  }\r\n  // Инициализация\r\n  function initSpollers(spollersArray, matchMedia = false) {\r\n    spollersArray.forEach(spollersBlock => {\r\n      spollersBlock = matchMedia ? spollersBlock.item : spollersBlock;\r\n      if (matchMedia.matches || !matchMedia) {\r\n        spollersBlock.classList.add('_init');\r\n        initSpollerBody(spollersBlock);\r\n        spollersBlock.addEventListener(\"click\", setSpollerAction);\r\n      } else {\r\n        spollersBlock.classList.remove('_init');\r\n        initSpollerBody(spollersBlock, false);\r\n        spollersBlock.removeEventListener(\"click\", setSpollerAction);\r\n      }\r\n    });\r\n  }\r\n  // Работа с контентом\r\n  function initSpollerBody(spollersBlock, hideSpollerBody = true) {\r\n    const spollerTitles = spollersBlock.querySelectorAll('[data-spoller]');\r\n    if (spollerTitles.length > 0) {\r\n      spollerTitles.forEach(spollerTitle => {\r\n        if (hideSpollerBody) {\r\n          spollerTitle.removeAttribute('tabindex');\r\n          if (!spollerTitle.classList.contains('_active')) {\r\n            spollerTitle.nextElementSibling.hidden = true;\r\n          }\r\n        } else {\r\n          spollerTitle.setAttribute('tabindex', '-1');\r\n          spollerTitle.nextElementSibling.hidden = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function setSpollerAction(e) {\r\n    const el = e.target;\r\n    if (el.hasAttribute('data-spoller') || el.closest('[data-spoller]')) {\r\n      const spollerTitle = el.hasAttribute('data-spoller') ? el : el.closest('[data-spoller]');\r\n      const spollersBlock = spollerTitle.closest('[data-spollers]');\r\n      const oneSpoller = spollersBlock.hasAttribute('data-one-spoller') ? true : false;\r\n      if (!spollersBlock.querySelectorAll('._slide').length) {\r\n        if (oneSpoller && !spollerTitle.classList.contains('_active')) {\r\n          hideSpollersBody(spollersBlock);\r\n        }\r\n        spollerTitle.classList.toggle('_active');\r\n        _slideToggle(spollerTitle.nextElementSibling, 500);\r\n      }\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  function hideSpollersBody(spollersBlock) {\r\n    const spollerActiveTitle = spollersBlock.querySelector('[data-spoller]._active');\r\n    if (spollerActiveTitle) {\r\n      spollerActiveTitle.classList.remove('_active');\r\n      _slideUp(spollerActiveTitle.nextElementSibling, 500);\r\n    }\r\n  }\r\n}\r\n//========================================================================================================================================================\r\n//SlideToggle\r\nlet _slideUp = (target, duration = 500) => {\r\n  if (!target.classList.contains('_slide')) {\r\n    target.classList.add('_slide');\r\n    target.style.transitionProperty = 'height, margin, padding';\r\n    target.style.transitionDuration = duration + 'ms';\r\n    target.style.height = target.offsetHeight + 'px';\r\n    target.offsetHeight;\r\n    target.style.overflow = 'hidden';\r\n    target.style.height = 0;\r\n    target.style.paddingTop = 0;\r\n    target.style.paddingBottom = 0;\r\n    target.style.marginTop = 0;\r\n    target.style.marginBottom = 0;\r\n    window.setTimeout(() => {\r\n      target.hidden = true;\r\n      target.style.removeProperty('height');\r\n      target.style.removeProperty('padding-top');\r\n      target.style.removeProperty('padding-bottom');\r\n      target.style.removeProperty('margin-top');\r\n      target.style.removeProperty('margin-bottom');\r\n      target.style.removeProperty('overflow');\r\n      target.style.removeProperty('transition-duration');\r\n      target.style.removeProperty('transition-property');\r\n      target.classList.remove('_slide');\r\n    }, duration);\r\n  }\r\n}\r\nlet _slideDown = (target, duration = 500) => {\r\n  if (!target.classList.contains('_slide')) {\r\n    target.classList.add('_slide');\r\n    if (target.hidden) {\r\n      target.hidden = false;\r\n    }\r\n    let height = target.offsetHeight;\r\n    target.style.overflow = 'hidden';\r\n    target.style.height = 0;\r\n    target.style.paddingTop = 0;\r\n    target.style.paddingBottom = 0;\r\n    target.style.marginTop = 0;\r\n    target.style.marginBottom = 0;\r\n    target.offsetHeight;\r\n    target.style.transitionProperty = \"height, margin, padding\";\r\n    target.style.transitionDuration = duration + 'ms';\r\n    target.style.height = height + 'px';\r\n    target.style.removeProperty('padding-top');\r\n    target.style.removeProperty('padding-bottom');\r\n    target.style.removeProperty('margin-top');\r\n    target.style.removeProperty('margin-bottom');\r\n    window.setTimeout(() => {\r\n      target.style.removeProperty('height');\r\n      target.style.removeProperty('overflow');\r\n      target.style.removeProperty('transition-duration');\r\n      target.style.removeProperty('transition-property');\r\n      target.classList.remove('_slide');\r\n    }, duration);\r\n  }\r\n}\r\nlet _slideToggle = (target, duration = 500) => {\r\n  if (target.hidden) {\r\n    return _slideDown(target, duration);\r\n  } else {\r\n    return _slideUp(target, duration);\r\n  }\r\n}\r\n\r\n//========================================================================================================================================================\r\n/*\r\nДля родителя слойлеров пишем атрибут data-spollers\r\nДля заголовков слойлеров пишем атрибут data-spoller\r\nЕсли нужно включать\\выключать работу спойлеров на разных размерах экранов\r\nпишем параметры ширины и типа брейкпоинта.\r\nНапример:\r\ndata-spollers=\"992,max\" - спойлеры будут работать только на экранах меньше или равно 992px\r\ndata-spollers=\"768,min\" - спойлеры будут работать только на экранах больше или равно 768px\r\n\r\nЕсли нужно что бы в блоке открывался болько один слойлер добавляем атрибут data-one-spoller\r\n*/\r\n"]}